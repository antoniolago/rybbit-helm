# Default values for rybbit chart
# This is a YAML-formatted file.

# Global settings
global:
  # Storage class for all persistent volumes
  # Image registry for all images
  # Image pull secrets for all images
  imagePullSecrets: []
  # Pod security context
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  # Container security context
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    allowPrivilegeEscalation: false
  # Pod disruption budget
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  # Pod anti-affinity
  podAntiAffinity: "soft"

# Backend application configuration
backend:
  enabled: true
  image:
    repository: ghcr.io/rybbit-io/rybbit-backend
    tag: latest
    pullPolicy: IfNotPresent
  replicaCount: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 10m
      memory: 128Mi
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3001
  env:
    NODE_ENV: production
    DISABLE_SIGNUP: "true"
    CLICKHOUSE_DB: default
    # BASE_URL: ""
    ### USE clickhouse CHART VALUES INSTEAD, ITS SAFER
    # CLICKHOUSE_USER: "rybbit"
    # CLICKHOUSE_PASSWORD: "rybbit"
    # CLICKHOUSE_HOST: "default-will-come-from-clickhouse-chart"

    ### USE postgres.auth INSTEAD, ITS SAFER
    # POSTGRES_HOST: postgresql-postgresql
    # POSTGRES_DB: analytics
    # POSTGRES_USER: postgres
    # POSTGRES_PASSWORD: "use-secret-instead"
    POSTGRES_PORT: 5432

  betterSecret:
    secretName: ""
    authKey: "better-auth-secret"
  # livenessProbe:
  #   httpGet:
  #     path: /health
  #     port: 3001
  #   enabled: true
  #   initialDelaySeconds: 10
  #   periodSeconds: 10
  #   timeoutSeconds: 5
  #   failureThreshold: 6
  #   successThreshold: 1
  # readinessProbe:
  #   httpGet:
  #     path: /health
  #     port: 3001
  #   enabled: true
  #   initialDelaySeconds: 10
  #   periodSeconds: 10
  #   timeoutSeconds: 5
  #   failureThreshold: 6
  #   successThreshold: 1
  # startupProbe:
  #   httpGet:
  #     path: /health
  #     port: 3001
  #   enabled: true
  #   initialDelaySeconds: 10
  #   periodSeconds: 10
  #   timeoutSeconds: 5
  #   failureThreshold: 30
  #   successThreshold: 1

  # Client application configuration
client:
  enabled: true
  image:
    repository: ghcr.io/rybbit-io/rybbit-client
    tag: latest
    pullPolicy: IfNotPresent
  replicaCount: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3002
  env:
    NODE_ENV: production
    NEXT_PUBLIC_BACKEND_URL: ""
  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: 3002
  #   enabled: true
  #   initialDelaySeconds: 60
  #   periodSeconds: 10
  #   timeoutSeconds: 5
  #   failureThreshold: 6
  #   successThreshold: 1
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: 3002
  #   enabled: true
  #   initialDelaySeconds: 60
  #   periodSeconds: 10
  #   timeoutSeconds: 5
  #   failureThreshold: 6
  #   successThreshold: 1
  # startupProbe:
  #   httpGet:
  #     path: /
  #     port: 3002
  #   enabled: true
  #   initialDelaySeconds: 60
  #   periodSeconds: 10
  #   timeoutSeconds: 5
  #   failureThreshold: 30
  #   successThreshold: 1

  # PostgreSQL configuration
  #https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
postgresql:
  enabled: true

  passwordUpdateJob:
    enabled: true
    
  # Even if postgresql disabled, this will be used to set POSTGRES_* envs
  auth:
    username: postgres
    database: analytics
    # existingSecret: ""
    # secretKeys:
    #   password: postgres-password
  primary:
    persistence:
      enabled: true
      storageClass: ""
      size: 10Gi
      accessModes:
      - ReadWriteOnce
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 30m
        memory: 20Mi
    service:
      type: ClusterIP
      ports:
        postgresql: 5432
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
      interval: 30s
      scrapeTimeout: 10s
      labels: {}
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    allowPrivilegeEscalation: false
  volumePermissions:
    enabled: true
  # backup:
  #   enabled: true
  #   schedule: "0 0 * * *"
  #   retention: 7

  # ClickHouse configuration
  #https://github.com/bitnami/charts/blob/main/bitnami/clickhouse/values.yaml
clickhouse:
  enabled: true
  replicaCount: 1
  shards: 1
  usePasswordFiles: false
  # Even if clickhouse disabled, these auth values will be used to set CLICKHOUSE_* envs
  # auth:
  # password: "Test"
  image:
    registry: docker.io
    repository: bitnami/clickhouse
    tag: 25.5.1-debian-12-r0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      http: 8123
      tcp: 9000
  resources:
    limits:
      cpu: 500m
      memory: 2Gi
    requests:
      cpu: 10m
      memory: 600Mi
  persistence:
    enabled: true
    storageClass: ""
    size: 20Gi
    accessModes:
    - ReadWriteOnce
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    allowPrivilegeEscalation: false
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
      interval: 30s
      scrapeTimeout: 10s
      labels: {}
  keeper:
    enabled: true
    replicaCount: 1
    persistence:
      enabled: true
      size: 8Gi
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 10m
        memory: 128Mi

# Ingress configuration
ingress:
  # API Ingress (with regex)
  api:
    enabled: false
    className: ""
    annotations:
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /api/$2
    hosts:
    - host: chart-example.local
      paths:
      - path: /api(/|$)(.*)
        pathType: ImplementationSpecific
    tls:
    - secretName: chart-example-tls
      hosts:
      - chart-example.local
  # Client Ingress (without regex)
  client:
    enabled: false
    className: ""
    hosts:
    - host: chart-example.local
      paths:
      - path: /
        pathType: Prefix
    tls:
    - secretName: chart-example-tls
      hosts:
      - chart-example.local